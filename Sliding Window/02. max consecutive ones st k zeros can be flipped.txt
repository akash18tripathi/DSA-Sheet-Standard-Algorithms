link : https://leetcode.com/problems/max-consecutive-ones-iii/

Question:
Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip at most k 0's.

 

Example 1:

Input: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2
Output: 6
Explanation: [1,1,1,0,0,1,1,1,1,1,1]
Bolded numbers were flipped from 0 to 1. The longest subarray is underlined.





SOLUTION:

class Solution {
public:
    int longestOnes(vector<int>& nums, int k) {
        int n = nums.size();
        int start=0,end=0;
        int kCount=k;
        int maxLen=0;
        while(end<n){
            if(nums[end]==0){
                kCount--;
                if(kCount<0){
                    maxLen = max(maxLen,end-start);
                    while(nums[start]!=0 && start<end){
                        start++;
                    }
                    start++;
                    kCount++;
                }
            }
            end++;
        }
        maxLen = max(maxLen,end-start);
        return maxLen;
    }
};
